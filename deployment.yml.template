---
apiVersion: v1
kind: Namespace
metadata:
   name: $KUBE_NAMESPACE
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: $APP_NAME
  name: $APP_NAME-config
  namespace: $KUBE_NAMESPACE
data:
  DJANGO_SETTINGS_MODULE: 'mysite.prd_settings'
---
apiVersion: v1
kind: Secret
metadata:
  name: $APP_NAME-secret
  namespace: $KUBE_NAMESPACE
type: Opaque
data:
  DB_PASS: $DB_PASS_BASE64
  DB_USER: $DB_USER_BASE64
  DB_HOST: $DB_HOST_BASE64
  DB_PORT: $DB_PORT_BASE64
  DJANGO_SECRET: $DJANGO_SECRET_BASE64
  DB_NAME: $DB_NAME_BASE64
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: $APP_NAME
  name: $APP_NAME-deployment
  namespace: $KUBE_NAMESPACE
spec:
  progressDeadlineSeconds: 600
  replicas: 2 
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: $APP_NAME
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: $APP_NAME
    spec:
      containers:
      - env:
        - name: DJANGO_SETTINGS_MODULE
          valueFrom:
            configMapKeyRef:
              key: DJANGO_SETTINGS_MODULE
              name: $APP_NAME-config
        - name: DJANGO_SECRET
          valueFrom:
            secretKeyRef:
              key: DJANGO_SECRET
              name: $APP_NAME-secret
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: DB_PASS
              name: $APP_NAME-secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: DB_USER
              name: $APP_NAME-secret
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: DB_HOST
              name: $APP_NAME-secret
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              key: DB_PORT
              name: $APP_NAME-secret
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              key: DB_NAME
              name: $APP_NAME-secret
        image: gcr.io/$GCP_PROJECT_NAME/django:latest
        imagePullPolicy: IfNotPresent
        name: django
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources: 
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "100m"
      - image: gcr.io/$GCP_PROJECT_NAME/nginx:latest
        imagePullPolicy: IfNotPresent
        name: nginx
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources: 
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "100m"
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /polls/healthcheck
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 300
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /polls/healthcheck
            port: 80
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 300        
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: $APP_NAME-service
  namespace: $KUBE_NAMESPACE
  labels:
    app: $APP_NAME
spec:
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
  selector:
    app: $APP_NAME
  type: "LoadBalancer"
  loadBalancerIP: ""
---
apiVersion: v1
items:
- apiVersion: autoscaling/v1
  kind: HorizontalPodAutoscaler
  metadata:
    name: $APP_NAME-hpa
    namespace: $KUBE_NAMESPACE
  spec:
    maxReplicas: 3
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: $APP_NAME-deployment
    targetCPUUtilizationPercentage: 50
kind: List
